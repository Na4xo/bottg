#–ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import telebot,sqlite3
from telebot import types
from dotenv import dotenv_values

#–¢–æ–∫–µ–Ω –∏ –∫–æ–Ω—Ñ–∏–≥
config=dotenv_values('.env')
bot=telebot.TeleBot(config.get('TOKEN'))

#–ü—Ä–æ–ø–∏—Å—ã–≤–µ–º –ª–æ–≥–∏–∫—É –∫–æ–º–∞–Ω–¥—ã /start.–†–µ–≥–∞–µ–º —é–∑–µ—Ä–∞ –≤ –±–¥ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç.–¢–∞–∫–∂–µ —Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∞—à–∫–∏ *–∫–ª–∏–∫*
@bot.message_handler(commands=['start'])
def start(message):
    connect = sqlite3.connect(config.get('DB_NAME'))
    cursor = connect.cursor()

    us_id = message.chat.id
    cursor.execute(f"SELECT id FROM users WHERE id = {us_id}")
    all = cursor.fetchone()

    if all == None:
        usersss_id = message.chat.id
        balance = 25 #–î–µ–Ω—å–≥–∞ –∑–∞ —Ä–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏—é —Ç–∞–∫ —Å–∫–∞–∑–∞—Ç—å
        cursor.execute("INSERT INTO users (id, balance) VALUES(?, ?);", (usersss_id, balance))
        connect.commit()

    #–°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –∫–Ω–æ–ø–∫–∏
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–∫—É–øüõí', callback_data='buys_menu')
    button2 = types.InlineKeyboardButton('–î–µ–π—Å—Ç–≤–∏—è —Å –±–∞–ª–∞–Ω—Å–æ–ºüí∞', callback_data='balance')
    button3 = types.InlineKeyboardButton('–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫üìä', callback_data='buy_history')
    button4=types.InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—Éüìù',url='https://t.me/Akito_17')
    markup.row(button1)
    markup.row(button2,button3)
    markup.row(button4)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!–Ø –±–æ—Ç –º–∞–≥–∞–∑–∏–Ω–∞ Akito!–£ –Ω–∞—Å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –∏–∑ —Ç–≤–æ–∏—Ö –ª—é–±–∏–º—ã—Ö –∏–≥—Ä', reply_markup=markup)  

#–î–∞–ª–µ–µ –≤–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –ø—Ä–æ—Ä–∞–±–æ—Ç–∞–ª –æ–¥–Ω—É –∫–Ω–æ–±–∫—É –Ω–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ
@bot.callback_query_handler(func=lambda call: call.data == 'back')
def balancerss(call):
    if call.data == 'back':
        markup = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å –∑–∞–∫—É–øüõí', callback_data='buys_menu')
        button2 = types.InlineKeyboardButton('–î–µ–π—Å—Ç–≤–∏—è —Å –±–∞–ª–∞–Ω—Å–æ–ºüí∞', callback_data='balance')
        button4 = types.InlineKeyboardButton('–ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫üìä', callback_data='buy_history')
        button5=types.InlineKeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—Éüìù',url='https://t.me/Akito_17')
        markup.row(button1)
        markup.row(button2,button4)
        markup.row(button5)
        bot.send_message(call.message.chat.id, f'–ü—Ä–∏–≤–µ—Ç {call.message.from_user.first_name}!–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –º–µ–Ω—é!', reply_markup=markup) 

#–°—Ä–∞–∑—É —Å–¥–µ–ª–∞–µ–º –±–∞–ª–∞–Ω—Å –∏–±–æ —è —Å –Ω–∏–º –Ω–∞–º—É—á–∞–ª—Å—è –∏ –æ–Ω –±—ã–ª –≥–æ—Ç–æ–≤ –Ω–∞ –∫–æ–º–ø–µ
@bot.callback_query_handler(func=lambda call: call.data == 'balance')
def balancerss(call):
   if call.data == 'balance':
        connection = sqlite3.connect(config.get('DB_NAME'))
        cursor = connection.cursor()
        user_id = call.from_user.id

        cursor.execute(f'SELECT balance FROM users WHERE id = {user_id}')
        result = cursor.fetchone()

        markup = types.InlineKeyboardMarkup()
        button1 = types.InlineKeyboardButton('–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç –®–ï–ö–ï–õ–Ø–ú–ò', callback_data='add_balance')
        button2 = types.InlineKeyboardButton('–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—éüü•', callback_data='back')
        markup.row(button1)
        markup.row(button2)

        if result:
            balance = result[0]
            bot.send_message(call.message.chat.id, f'–°–µ–π—á–∞—Å —É —Ç–µ–±—è —Å—Ç–æ–ª—å–∫–æ –®–ï–ö–ï–õ–ï–ô: {balance}', reply_markup=markup)
        else:
            bot.send_message(call.message.chat.id, '–ù–µ—Ç —Ç–∞–∫–æ–≥–æ —é–∑–µ—Ä–∞', reply_markup=markup)

#–ö–∞–∫ –±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–æ —ç—Ç–æ –∫–æ—Ä–æ—á–µ —Ç–∏–ø–æ –º—ã —Ç—É—Ç –ø–∏—à–µ–º —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è 
@bot.callback_query_handler(func=lambda call: call.data == 'add_balance')
def balancerss(call):
   if call.data == 'add_balance':
        connection = sqlite3.connect(config.get('DB_NAME'))
        cursor = connection.cursor()
        user_id = call.from_user.id

        cursor.execute(f'SELECT balance FROM users WHERE id = {user_id}')
        result = cursor.fetchone()
        if result:
            balance = result[0]
            bot.send_message(call.message.chat.id, f'–°–µ–π—á–∞—Å —É —Ç–µ–±—è —Å—Ç–æ–ª—å–∫–æ –®–ï–ö–ï–õ–ï–ô: {balance}')
            bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Ö–æ—Ç—è –º—ã –Ω–µ —Å–±–µ—Ä–±–∞–Ω–∫ –Ω–æ –≤–≤–æ–¥–∏,–Ω–∞–º –º–æ–∂–Ω–æ –¥–æ–≤–µ—Ä—è—Ç—å:')
            bot.register_next_step_handler(call.message, new_balancers)
        else:
            bot.send_message(call.message.chat.id, '–¢–∞–∫–æ–≥–æ —é–∑–µ—Ä–∞ –Ω–µ—Ç!')

def new_balancers(message):

    try:
        summa_popolnenyia = int(message.text)
        user_id = message.from_user.id
        connection = sqlite3.connect(config.get('DB_NAME'))

        cursor = connection.cursor()
        markup = types.InlineKeyboardMarkup()
        button = types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—éüü•', callback_data='back')
        markup.add(button)

        cursor.execute(f'SELECT balance FROM users WHERE id = {user_id}')
        result = cursor.fetchone()
        if result:
            balance = result[0]
            if summa_popolnenyia <= 3500 and summa_popolnenyia > 0:
                new_balance = balance + summa_popolnenyia
                cursor.execute(f'UPDATE users SET balance = {new_balance} WHERE id = {user_id}')
                connection.commit()
                connection.close()
                bot.send_message(message.chat.id, f'–¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è —Å—Ç–æ–ª—å–∫–æ –®–ï–ö–ï–õ–ï–ô: {new_balance}', reply_markup=markup)
            else:
                bot.send_message(message.chat.id, '–Ω–∞–º –Ω–µ –Ω–∞–¥–æ 0 –∏ –Ω–µ –Ω–∞–¥–æ –±–æ–ª—å—à–µ 3500 —Ç–≤–æ–∏—Ö –®–ï–ö–ï–õ–ï–ô', reply_markup=markup)
        else:
            connection.close()
            bot.send_message(message.chat.id, '–≤–∞—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', reply_markup=markup)
    except ValueError:
        bot.send_message(message.chat.id, '–ï—Å–ª–∏  —ç—Ç–æ –Ω–µ —Ü–∏—Ñ—Ä—ã —Ç–æ –∏–¥–∏ –Ω–∞—Ñ–∏–≥ —Å —ç—Ç–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞!')

#–ü–æ–ª—É—á–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
@bot.callback_query_handler(func=lambda call: call.data == 'buys_menu')
def menu_pokupki(call):
    connection = sqlite3.connect(config.get('DB_NAME'))
    cursor = connection.cursor()
    cursor.execute("SELECT * FROM categories")
    data = cursor.fetchall()
    connection.close()
    
    markup = types.InlineKeyboardMarkup()
   
    for item in data:
        id, type = item
        markup.add(types.InlineKeyboardButton(type, callback_data=f'category_{id}'))
        markup.add(types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—éüü•', callback_data='back'))
    bot.send_message(call.message.chat.id,f"–°–µ–π—á–∞—Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è –æ–¥–Ω–∞ –Ω–æ —Ç–µ–±—è —ç—Ç–æ –≤–æ–ª–Ω–æ–≤–∞—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ:", reply_markup=markup)

#–¢–µ–ø–µ—Ä—å,–Ω–∞–º –Ω—É–∂–Ω–æ —á—Ç–æ–±—ã –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞–º –≤—ã–≤–æ–¥–∏–ª–∏—Å—å —Ç–æ–≤–∞—Ä—ã)
@bot.callback_query_handler(func=lambda call: call.data.startswith('category_'))
def callback_category(call):
       category_id = call.data.split('_')[1]  
       connection = sqlite3.connect(config.get('DB_NAME'))
       cursor = connection.cursor()
       query = f'''
               SELECT items.id, items.name
               FROM items
               INNER JOIN categories ON items.categories_id = categories.id
               WHERE categories.id = {category_id}
               '''
       cursor.execute(query)
       data = cursor.fetchall()
       connection.close()

       markup = types.InlineKeyboardMarkup()
       
       for item in data:
           item_id, item_name = item
           markup.add(types.InlineKeyboardButton(item_name, callback_data=f'item_{item_id}'))
       markup.add(types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—éüü•', callback_data='back'))
       bot.send_message(call.message.chat.id,'–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:', reply_markup=markup)

#–ü—Ä–∏ –≤—ã–±–æ—Ä–µ —Ç–æ–≤–∞—Ä–∞ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ—É –æ –Ω—ë–º
@bot.callback_query_handler(func=lambda call: call.data.startswith('item_'))
def callback_item(call):
    connection = sqlite3.connect(config.get('DB_NAME'))
    cursor = connection.cursor()
    item_id = call.data.split('_')[1]  
    query = f'''
            SELECT name, desc, price
            FROM items
            WHERE id = {item_id}
            '''
    cursor.execute(query)
    data = cursor.fetchone()
    item_name, item_desc, item_price=data
    bot.send_message(call.message.chat.id,f'–ù–∞–∑–≤–∞–Ω–∏–µ: {item_name}\n–û–ø–∏—Å–∞–Ω–∏–µ: {item_desc}\n–¶–µ–Ω–∞: {item_price} –®–ï–ö–ï–õ–ï–ô')
    markup = types.InlineKeyboardMarkup()
    
    markup.add(types.InlineKeyboardButton('–ö—É–ø–∏—Ç—å', callback_data=f'buy_{item_id}'))
    markup.add(types.InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—Å—å—è –≤ –º–µ–Ω—éüü•', callback_data='back'))
    bot.send_message(call.message.chat.id, '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–∫—É–ø–∫—É:', reply_markup=markup)

#–¢–µ–ø–µ—Ä—å –ø–æ–∫—É–ø–∫–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith("buy_"))
def callback_buy(call):
    connection = sqlite3.connect(config.get('DB_NAME'))
    cursors = connection.cursor()
    user_id = call.from_user.id
    item_id = call.data.split("_")[1]

    # –î–æ—Å—Ç–∞—ë–º –∏–Ω—Ñ—É –æ —Ç–æ–≤–∞—Ä–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    item_query = '''
            SELECT name, price
            FROM items
            WHERE id = ?'''
    cursors.execute(item_query, (item_id,))
    item_data = cursors.fetchone()
    item_name, item_price_str = item_data
    item_price = int(item_price_str)

    # –î–æ—Å—Ç–∞—ë–º –±–∞–ª–∞–Ω—Å –ø–æ –ø—Ä–∏–º–µ—Ä—É –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
    balance_query = '''
            SELECT balance
            FROM users
            WHERE id = ?'''
    cursors.execute(balance_query, (user_id,))
    user_balance = cursors.fetchone()[0]

    if user_balance >= item_price:
        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏ –∑–∞–Ω–æ—Å–∏–º –≤ bills
        new_balance = user_balance - item_price
        update_query = '''
                   UPDATE users
                   SET balance = ?
                   WHERE id = ?'''
        cursors.execute(update_query, (new_balance, user_id))
        insert_query = '''
                   INSERT INTO bills (user_id, item_id, date)
                   VALUES (?, ?, CURRENT_TIMESTAMP)'''
        cursors.execute(insert_query, (user_id, item_id))

        connection.commit()

        bot.send_message(call.message.chat.id, f'–ú–æ–ª–æ–¥–µ—Ü —Ç–≤–æ–∏ –®–ï–ö–ï–õ–ò –ú–û–ò!–£–•–ê–•–ê–•–£–ê–•–£–ê–•(–ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–∫—É–ø–∫–æ–π):{item_name}! –¢–í–û–ô –ù–û–í–´–ô –ë–ê–õ–ê–ù–° –ú–û–ñ–ù–û –ü–û–ü–û–õ–ù–ò–¢–¨')
    else:
        bot.send_message(call.message.chat.id, '–•–ü–•–ü–•–•–ü–•–ü,–õ–û–• –£ –¢–ï–ë–Ø –ù–ï–¢ –®–ï–ö–ï–õ–ï–ô')

#–ò—Å—Ç–æ—Ä–∏—è:


#–°–æ–∑–¥–∞—ë–º —Ü–∏–∫–ª,–±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ.
bot.polling(none_stop=True)